{"ast":null,"code":"var _jsxFileName = \"/Users/darynafesyk/Desktop/React_E-Commerce-jewelry/src/components/BookingForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport emailjs from 'emailjs-com';\nimport moment from 'moment';\nimport '../styles/bookform.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingForm = () => {\n  _s();\n  const [startDate, setStartDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n  const [selectedService, setSelectedService] = useState('');\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    message: ''\n  });\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [weekDates, setWeekDates] = useState([]);\n\n  // Define doctors and their available slots\n  const doctors = {\n    'Dr. Smith': {\n      '2024-08-02': [\"9:00 AM\", \"10:00 AM\", \"1:00 PM\", \"3:00 PM\"],\n      '2024-08-04': [\"11:00 AM\", \"2:00 PM\", \"4:00 PM\"],\n      '2024-08-05': [\"9:00 AM\", \"12:00 PM\", \"2:00 PM\", \"5:00 PM\"]\n    },\n    'Dr. Johnson': {\n      '2024-08-02': [\"8:00 AM\", \"11:00 AM\", \"1:00 PM\", \"4:00 PM\"],\n      '2024-08-03': [\"10:00 AM\", \"1:00 PM\", \"3:00 PM\", \"5:00 PM\"],\n      '2024-08-05': [\"9:30 AM\", \"11:30 AM\", \"2:30 PM\", \"4:30 PM\"]\n    }\n  };\n  const services = ['Consultation', 'Follow-up', 'Therapy Session'];\n\n  // Retrieve booked slots from local storage or initialize an empty object\n  const getBookedSlotsFromLocalStorage = () => {\n    const storedSlots = localStorage.getItem('bookedSlots');\n    return storedSlots ? JSON.parse(storedSlots) : {};\n  };\n  const [bookedSlots, setBookedSlots] = useState(getBookedSlotsFromLocalStorage);\n  const [availableTimes, setAvailableTimes] = useState({});\n  useEffect(() => {\n    if (selectedDoctor && weekDates.length > 0) {\n      const timesForWeek = {};\n      weekDates.forEach(date => {\n        const dateString = date.format('YYYY-MM-DD');\n        const bookedTimesForDate = bookedSlots[dateString] || [];\n        const timesForSelectedDate = doctors[selectedDoctor][dateString] || [];\n        const filteredTimes = timesForSelectedDate.filter(time => !bookedTimesForDate.includes(time));\n        timesForWeek[dateString] = filteredTimes;\n      });\n      setAvailableTimes(timesForWeek);\n    } else {\n      setAvailableTimes({});\n    }\n  }, [weekDates, bookedSlots, selectedDoctor]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleDoctorChange = e => {\n    setSelectedDoctor(e.target.value);\n    setSelectedTime(''); // Reset selected time when doctor changes\n  };\n\n  const handleServiceChange = e => {\n    setSelectedService(e.target.value);\n  };\n  const handleWeekChange = date => {\n    const startOfWeek = moment(date).startOf('isoWeek');\n    const endOfWeek = moment(date).endOf('isoWeek');\n    const days = [];\n    for (let m = startOfWeek; m.isBefore(endOfWeek); m.add(1, 'days')) {\n      days.push(moment(m));\n    }\n    setWeekDates(days);\n    setStartDate(startOfWeek.toDate());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const templateParams = {\n      ...formData,\n      date: startDate.toLocaleDateString(),\n      time: selectedTime,\n      doctor: selectedDoctor,\n      service: selectedService\n    };\n    emailjs.send('service_t43b9l3', 'template_nhom3d2', templateParams, 'jpDNG96sg4J956g8G').then(result => {\n      console.log(\"Email successfully sent! Response:\", result.text);\n      setIsSubmitted(true);\n\n      // Update booked slots and persist to local storage\n      const selectedDate = startDate.toISOString().split('T')[0];\n      const updatedBookedSlots = {\n        ...bookedSlots,\n        [selectedDate]: [...(bookedSlots[selectedDate] || []), selectedTime]\n      };\n      setBookedSlots(updatedBookedSlots);\n      localStorage.setItem('bookedSlots', JSON.stringify(updatedBookedSlots));\n    }, error => {\n      console.error(\"Failed to send email. Error:\", error.text);\n    });\n\n    // Reset form\n    setFormData({\n      name: '',\n      email: '',\n      phone: '',\n      message: ''\n    });\n    setStartDate(new Date());\n    setSelectedTime('');\n    setSelectedDoctor('');\n    setSelectedService('');\n  };\n  const handleTimeSelection = time => {\n    setSelectedTime(time);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-form\",\n    children: isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-message\",\n      children: \"Thank you! Your booking has been confirmed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"phone\",\n          value: formData.phone,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"doctor\",\n          value: selectedDoctor,\n          onChange: handleDoctorChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), Object.keys(doctors).map((doctor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: doctor,\n            children: doctor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Service:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"service\",\n          value: selectedService,\n          onChange: handleServiceChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), services.map((service, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: service,\n            children: service\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Week:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => handleWeekChange(date),\n          showWeekNumbers: true,\n          dateFormat: \"yyyy-MM-dd\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), weekDates.map((date, index) => {\n          var _availableTimes$date$;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-times\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-label\",\n              children: date.format('dddd, MMMM D, YYYY')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-buttons\",\n              children: (_availableTimes$date$ = availableTimes[date.format('YYYY-MM-DD')]) === null || _availableTimes$date$ === void 0 ? void 0 : _availableTimes$date$.map((timeSlot, idx) => {\n                var _bookedSlots$date$for;\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: `time-button ${selectedTime === timeSlot ? 'selected' : ''}`,\n                  onClick: () => handleTimeSelection(timeSlot),\n                  disabled: (_bookedSlots$date$for = bookedSlots[date.format('YYYY-MM-DD')]) === null || _bookedSlots$date$for === void 0 ? void 0 : _bookedSlots$date$for.includes(timeSlot),\n                  children: timeSlot\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          value: formData.message,\n          onChange: handleChange,\n          required: true,\n          rows: \"4\",\n          cols: \"50\",\n          placeholder: \"Describe your problem...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingForm, \"vdsqnJ7Si58Anox9OvVO3hMN3jE=\");\n_c = BookingForm;\nexport default BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","emailjs","moment","jsxDEV","_jsxDEV","BookingForm","_s","startDate","setStartDate","Date","selectedTime","setSelectedTime","selectedDoctor","setSelectedDoctor","selectedService","setSelectedService","formData","setFormData","name","email","phone","message","isSubmitted","setIsSubmitted","weekDates","setWeekDates","doctors","services","getBookedSlotsFromLocalStorage","storedSlots","localStorage","getItem","JSON","parse","bookedSlots","setBookedSlots","availableTimes","setAvailableTimes","length","timesForWeek","forEach","date","dateString","format","bookedTimesForDate","timesForSelectedDate","filteredTimes","filter","time","includes","handleChange","e","target","value","handleDoctorChange","handleServiceChange","handleWeekChange","startOfWeek","startOf","endOfWeek","endOf","days","m","isBefore","add","push","toDate","handleSubmit","preventDefault","templateParams","toLocaleDateString","doctor","service","send","then","result","console","log","text","selectedDate","toISOString","split","updatedBookedSlots","setItem","stringify","error","handleTimeSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","Object","keys","map","index","selected","showWeekNumbers","dateFormat","_availableTimes$date$","timeSlot","idx","_bookedSlots$date$for","onClick","disabled","rows","cols","placeholder","_c","$RefreshReg$"],"sources":["/Users/darynafesyk/Desktop/React_E-Commerce-jewelry/src/components/BookingForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport emailjs from 'emailjs-com';\nimport moment from 'moment';\nimport '../styles/bookform.css';\n\nconst BookingForm = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n  const [selectedService, setSelectedService] = useState('');\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    message: ''\n  });\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [weekDates, setWeekDates] = useState([]);\n\n  // Define doctors and their available slots\n  const doctors = {\n    'Dr. Smith': {\n      '2024-08-02': [\"9:00 AM\", \"10:00 AM\", \"1:00 PM\", \"3:00 PM\"],\n      '2024-08-04': [\"11:00 AM\", \"2:00 PM\", \"4:00 PM\"],\n      '2024-08-05': [\"9:00 AM\", \"12:00 PM\", \"2:00 PM\", \"5:00 PM\"],\n    },\n    'Dr. Johnson': {\n      '2024-08-02': [\"8:00 AM\", \"11:00 AM\", \"1:00 PM\", \"4:00 PM\"],\n      '2024-08-03': [\"10:00 AM\", \"1:00 PM\", \"3:00 PM\", \"5:00 PM\"],\n      '2024-08-05': [\"9:30 AM\", \"11:30 AM\", \"2:30 PM\", \"4:30 PM\"],\n    },\n  };\n\n  const services = ['Consultation', 'Follow-up', 'Therapy Session'];\n\n  // Retrieve booked slots from local storage or initialize an empty object\n  const getBookedSlotsFromLocalStorage = () => {\n    const storedSlots = localStorage.getItem('bookedSlots');\n    return storedSlots ? JSON.parse(storedSlots) : {};\n  };\n\n  const [bookedSlots, setBookedSlots] = useState(getBookedSlotsFromLocalStorage);\n  const [availableTimes, setAvailableTimes] = useState({});\n\n  useEffect(() => {\n    if (selectedDoctor && weekDates.length > 0) {\n      const timesForWeek = {};\n      weekDates.forEach(date => {\n        const dateString = date.format('YYYY-MM-DD');\n        const bookedTimesForDate = bookedSlots[dateString] || [];\n        const timesForSelectedDate = doctors[selectedDoctor][dateString] || [];\n        const filteredTimes = timesForSelectedDate.filter(time => !bookedTimesForDate.includes(time));\n        timesForWeek[dateString] = filteredTimes;\n      });\n      setAvailableTimes(timesForWeek);\n    } else {\n      setAvailableTimes({});\n    }\n  }, [weekDates, bookedSlots, selectedDoctor]);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleDoctorChange = (e) => {\n    setSelectedDoctor(e.target.value);\n    setSelectedTime(''); // Reset selected time when doctor changes\n  };\n\n  const handleServiceChange = (e) => {\n    setSelectedService(e.target.value);\n  };\n\n  const handleWeekChange = (date) => {\n    const startOfWeek = moment(date).startOf('isoWeek');\n    const endOfWeek = moment(date).endOf('isoWeek');\n    const days = [];\n    for (let m = startOfWeek; m.isBefore(endOfWeek); m.add(1, 'days')) {\n      days.push(moment(m));\n    }\n    setWeekDates(days);\n    setStartDate(startOfWeek.toDate());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const templateParams = {\n      ...formData,\n      date: startDate.toLocaleDateString(),\n      time: selectedTime,\n      doctor: selectedDoctor,\n      service: selectedService\n    };\n\n    emailjs.send('service_t43b9l3', 'template_nhom3d2', templateParams, 'jpDNG96sg4J956g8G')\n      .then((result) => {\n        console.log(\"Email successfully sent! Response:\", result.text);\n        setIsSubmitted(true);\n\n        // Update booked slots and persist to local storage\n        const selectedDate = startDate.toISOString().split('T')[0];\n        const updatedBookedSlots = {\n          ...bookedSlots,\n          [selectedDate]: [...(bookedSlots[selectedDate] || []), selectedTime]\n        };\n        setBookedSlots(updatedBookedSlots);\n        localStorage.setItem('bookedSlots', JSON.stringify(updatedBookedSlots));\n      }, (error) => {\n        console.error(\"Failed to send email. Error:\", error.text);\n      });\n\n    // Reset form\n    setFormData({ name: '', email: '', phone: '', message: '' });\n    setStartDate(new Date());\n    setSelectedTime('');\n    setSelectedDoctor('');\n    setSelectedService('');\n  };\n\n  const handleTimeSelection = (time) => {\n    setSelectedTime(time);\n  };\n\n  return (\n    <div className='booking-form'>\n      {isSubmitted ? (\n        <div className=\"confirmation-message\">\n          Thank you! Your booking has been confirmed.\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label>Name:</label>\n            <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\n          </div>\n          <div>\n            <label>Email:</label>\n            <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n          </div>\n          <div>\n            <label>Phone:</label>\n            <input type=\"tel\" name=\"phone\" value={formData.phone} onChange={handleChange} required />\n          </div>\n          <div>\n            <label>Doctor:</label>\n            <select name=\"doctor\" value={selectedDoctor} onChange={handleDoctorChange} required>\n              <option value=\"\">Select a doctor</option>\n              {Object.keys(doctors).map((doctor, index) => (\n                <option key={index} value={doctor}>{doctor}</option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label>Service:</label>\n            <select name=\"service\" value={selectedService} onChange={handleServiceChange} required>\n              <option value=\"\">Select a service</option>\n              {services.map((service, index) => (\n                <option key={index} value={service}>{service}</option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label>Week:</label>\n            <DatePicker\n              selected={startDate}\n              onChange={date => handleWeekChange(date)}\n              showWeekNumbers\n              dateFormat=\"yyyy-MM-dd\"\n              required\n            />\n          </div>\n          <div>\n            <label>Time:</label>\n            {weekDates.map((date, index) => (\n              <div key={index} className=\"day-times\">\n                <div className=\"day-label\">{date.format('dddd, MMMM D, YYYY')}</div>\n                <div className=\"time-buttons\">\n                  {availableTimes[date.format('YYYY-MM-DD')]?.map((timeSlot, idx) => (\n                    <button\n                      key={idx}\n                      type=\"button\"\n                      className={`time-button ${selectedTime === timeSlot ? 'selected' : ''}`}\n                      onClick={() => handleTimeSelection(timeSlot)}\n                      disabled={bookedSlots[date.format('YYYY-MM-DD')]?.includes(timeSlot)}\n                    >\n                      {timeSlot}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div>\n            <label>Message:</label>\n            <textarea\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              required\n              rows=\"4\"\n              cols=\"50\"\n              placeholder=\"Describe your problem...\"\n            ></textarea>\n          </div>\n          <div>\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default BookingForm;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}